version: '3.5'
services:

  eca-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: eca-db
    volumes:
      - ./scripts/eca-db-postgresinit.sql:/docker-entrypoint-initdb.d/postgresinit.sql
      - /home/eca-pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: "Asia/Novosibirsk"
      PGTZ: "Asia/Novosibirsk"

  notification-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: notification-db
    volumes:
      - ./scripts/notification-db-postgresinit.sql:/docker-entrypoint-initdb.d/postgresinit.sql
      - /home/notification-pgdata:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: "Asia/Novosibirsk"
      PGTZ: "Asia/Novosibirsk"

  ers-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: ers-db
    volumes:
      - ./scripts/ers-db-postgresinit.sql:/docker-entrypoint-initdb.d/postgresinit.sql
      - /home/ers-pgdata:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: "Asia/Novosibirsk"
      PGTZ: "Asia/Novosibirsk"

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbit"
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - ./conf/rabbitmq.conf:/etc/rabbitmq/rabbitmq.config
      - /home/rabbit-data:/var/lib/rabbitmq
    environment:
      TZ: "Asia/Novosibirsk"

  eca-server:
    image: ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:eca-server
    container_name: eca-server
    command: ["/wait-for-it.sh", "eca-db:5432", "--timeout=${DB_CONTAINER_WAIT_TIMEOUT}", "--", "catalina.sh", "run"]
    volumes:
      - /home/experiment:/home/experiment
      - /home/experiment/data:/home/experiment/data
    environment:
      TZ: "Asia/Novosibirsk"
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - eca-db
      - monitoring
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  eca-oauth:
    image: ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:eca-oauth
    container_name: eca-oauth
    command: ["/wait-for-it.sh", "eca-db:5432", "--timeout=${DB_CONTAINER_WAIT_TIMEOUT}", "--", "catalina.sh", "run"]
    environment:
      TZ: "Asia/Novosibirsk"
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - eca-db
      - monitoring
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  eca-web:
    image: ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:eca-web
    container_name: eca-web
    environment:
      TZ: "Asia/Novosibirsk"
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - eca-server

  zuul-gate:
    image: ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:zuul-gate
    container_name: zuul-gate
    environment:
      TZ: "Asia/Novosibirsk"
      SPRING_PROFILES_ACTIVE: "docker"
    ports:
      - "8080:8080"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  monitoring:
    image: ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:monitoring
    container_name: monitoring
    environment:
      TZ: "Asia/Novosibirsk"
      SPRING_PROFILES_ACTIVE: "docker"
    ports:
      - "8085:8080"
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  notification-service:
    image: ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:notification-service
    container_name: notification-service
    command: ["/wait-for-it.sh", "notification-db:5432", "--timeout=${DB_CONTAINER_WAIT_TIMEOUT}", "--", "catalina.sh", "run"]
    environment:
      TZ: "Asia/Novosibirsk"
      SPRING_PROFILES_ACTIVE: "docker"
    ports:
      - "8082:8080"
    depends_on:
      - notification-db
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  evaluation-results-service:
    image: ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:evaluation-results-service
    container_name: evaluation-results-service
    command: ["/wait-for-it.sh", "ers-db:5432", "--timeout=${DB_CONTAINER_WAIT_TIMEOUT}", "--", "catalina.sh", "run"]
    environment:
      TZ: "Asia/Novosibirsk"
      SPRING_PROFILES_ACTIVE: "docker"
    ports:
      - "8081:8080"
    depends_on:
      - ers-db
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
    volumes:
      - /home/elasticsearch/data:/usr/share/elasticsearch/data:rw

  kibana:
    image: docker.elastic.co/kibana/kibana:${ES_VERSION}
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:${ES_VERSION}
    container_name: filebeat
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/filebeat/data:/usr/share/filebeat/data:rw
    user: root